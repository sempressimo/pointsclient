//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PointsModel", "FK_Claims_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Points_Web.Customers), "Claims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Points_Web.Claims), true)]
[assembly: EdmRelationshipAttribute("PointsModel", "FK_Claims_Rewards", "Rewards", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Points_Web.Rewards), "Claims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Points_Web.Claims), true)]
[assembly: EdmRelationshipAttribute("PointsModel", "FK_Transactions_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Points_Web.Customers), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Points_Web.Transactions), true)]
[assembly: EdmRelationshipAttribute("PointsModel", "FK_Rewards_Reward_Categories", "Reward_Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Points_Web.Reward_Categories), "Rewards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Points_Web.Rewards), true)]

#endregion

namespace Points_Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PointsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PointsEntities object using the connection string found in the 'PointsEntities' section of the application configuration file.
        /// </summary>
        public PointsEntities() : base("name=PointsEntities", "PointsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PointsEntities object.
        /// </summary>
        public PointsEntities(string connectionString) : base(connectionString, "PointsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PointsEntities object.
        /// </summary>
        public PointsEntities(EntityConnection connection) : base(connection, "PointsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Claims> Claims
        {
            get
            {
                if ((_Claims == null))
                {
                    _Claims = base.CreateObjectSet<Claims>("Claims");
                }
                return _Claims;
            }
        }
        private ObjectSet<Claims> _Claims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customers> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customers>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customers> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reward_Categories> Reward_Categories
        {
            get
            {
                if ((_Reward_Categories == null))
                {
                    _Reward_Categories = base.CreateObjectSet<Reward_Categories>("Reward_Categories");
                }
                return _Reward_Categories;
            }
        }
        private ObjectSet<Reward_Categories> _Reward_Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rewards> Rewards
        {
            get
            {
                if ((_Rewards == null))
                {
                    _Rewards = base.CreateObjectSet<Rewards>("Rewards");
                }
                return _Rewards;
            }
        }
        private ObjectSet<Rewards> _Rewards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transactions> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transactions>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transactions> _Transactions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Claims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaims(Claims claims)
        {
            base.AddObject("Claims", claims);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customers customers)
        {
            base.AddObject("Customers", customers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reward_Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReward_Categories(Reward_Categories reward_Categories)
        {
            base.AddObject("Reward_Categories", reward_Categories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rewards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRewards(Rewards rewards)
        {
            base.AddObject("Rewards", rewards);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transactions transactions)
        {
            base.AddObject("Transactions", transactions);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="Claims")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Claims : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Claims object.
        /// </summary>
        /// <param name="claim_ID">Initial value of the Claim_ID property.</param>
        public static Claims CreateClaims(global::System.Int32 claim_ID)
        {
            Claims claims = new Claims();
            claims.Claim_ID = claim_ID;
            return claims;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Claim_ID
        {
            get
            {
                return _Claim_ID;
            }
            set
            {
                if (_Claim_ID != value)
                {
                    OnClaim_IDChanging(value);
                    ReportPropertyChanging("Claim_ID");
                    _Claim_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Claim_ID");
                    OnClaim_IDChanged();
                }
            }
        }
        private global::System.Int32 _Claim_ID;
        partial void OnClaim_IDChanging(global::System.Int32 value);
        partial void OnClaim_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customer_ID
        {
            get
            {
                return _Customer_ID;
            }
            set
            {
                OnCustomer_IDChanging(value);
                ReportPropertyChanging("Customer_ID");
                _Customer_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Customer_ID");
                OnCustomer_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Customer_ID;
        partial void OnCustomer_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomer_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reward_ID
        {
            get
            {
                return _Reward_ID;
            }
            set
            {
                OnReward_IDChanging(value);
                ReportPropertyChanging("Reward_ID");
                _Reward_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reward_ID");
                OnReward_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Reward_ID;
        partial void OnReward_IDChanging(Nullable<global::System.Int32> value);
        partial void OnReward_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PointsUsed
        {
            get
            {
                return _PointsUsed;
            }
            set
            {
                OnPointsUsedChanging(value);
                ReportPropertyChanging("PointsUsed");
                _PointsUsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointsUsed");
                OnPointsUsedChanged();
            }
        }
        private Nullable<global::System.Int32> _PointsUsed;
        partial void OnPointsUsedChanging(Nullable<global::System.Int32> value);
        partial void OnPointsUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Claims_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Claims_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Claims_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Claims_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("PointsModel.FK_Claims_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Claims_Rewards", "Rewards")]
        public Rewards Rewards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rewards>("PointsModel.FK_Claims_Rewards", "Rewards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rewards>("PointsModel.FK_Claims_Rewards", "Rewards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rewards> RewardsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rewards>("PointsModel.FK_Claims_Rewards", "Rewards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rewards>("PointsModel.FK_Claims_Rewards", "Rewards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="Customers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customers object.
        /// </summary>
        /// <param name="customer_ID">Initial value of the Customer_ID property.</param>
        public static Customers CreateCustomers(global::System.Int32 customer_ID)
        {
            Customers customers = new Customers();
            customers.Customer_ID = customer_ID;
            return customers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Customer_ID
        {
            get
            {
                return _Customer_ID;
            }
            set
            {
                if (_Customer_ID != value)
                {
                    OnCustomer_IDChanging(value);
                    ReportPropertyChanging("Customer_ID");
                    _Customer_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Customer_ID");
                    OnCustomer_IDChanged();
                }
            }
        }
        private global::System.Int32 _Customer_ID;
        partial void OnCustomer_IDChanging(global::System.Int32 value);
        partial void OnCustomer_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer_Name
        {
            get
            {
                return _Customer_Name;
            }
            set
            {
                OnCustomer_NameChanging(value);
                ReportPropertyChanging("Customer_Name");
                _Customer_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer_Name");
                OnCustomer_NameChanged();
            }
        }
        private global::System.String _Customer_Name;
        partial void OnCustomer_NameChanging(global::System.String value);
        partial void OnCustomer_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone_Number
        {
            get
            {
                return _Phone_Number;
            }
            set
            {
                OnPhone_NumberChanging(value);
                ReportPropertyChanging("Phone_Number");
                _Phone_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone_Number");
                OnPhone_NumberChanged();
            }
        }
        private global::System.String _Phone_Number;
        partial void OnPhone_NumberChanging(global::System.String value);
        partial void OnPhone_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VINs
        {
            get
            {
                return _VINs;
            }
            set
            {
                OnVINsChanging(value);
                ReportPropertyChanging("VINs");
                _VINs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VINs");
                OnVINsChanged();
            }
        }
        private global::System.String _VINs;
        partial void OnVINsChanging(global::System.String value);
        partial void OnVINsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Claims_Customers", "Claims")]
        public EntityCollection<Claims> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claims>("PointsModel.FK_Claims_Customers", "Claims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claims>("PointsModel.FK_Claims_Customers", "Claims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Transactions_Customers", "Transactions")]
        public EntityCollection<Transactions> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transactions>("PointsModel.FK_Transactions_Customers", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transactions>("PointsModel.FK_Transactions_Customers", "Transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="Reward_Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reward_Categories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reward_Categories object.
        /// </summary>
        /// <param name="reward_Category_ID">Initial value of the Reward_Category_ID property.</param>
        public static Reward_Categories CreateReward_Categories(global::System.Int32 reward_Category_ID)
        {
            Reward_Categories reward_Categories = new Reward_Categories();
            reward_Categories.Reward_Category_ID = reward_Category_ID;
            return reward_Categories;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reward_Category_ID
        {
            get
            {
                return _Reward_Category_ID;
            }
            set
            {
                if (_Reward_Category_ID != value)
                {
                    OnReward_Category_IDChanging(value);
                    ReportPropertyChanging("Reward_Category_ID");
                    _Reward_Category_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Reward_Category_ID");
                    OnReward_Category_IDChanged();
                }
            }
        }
        private global::System.Int32 _Reward_Category_ID;
        partial void OnReward_Category_IDChanging(global::System.Int32 value);
        partial void OnReward_Category_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reward_Category_Description
        {
            get
            {
                return _Reward_Category_Description;
            }
            set
            {
                OnReward_Category_DescriptionChanging(value);
                ReportPropertyChanging("Reward_Category_Description");
                _Reward_Category_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reward_Category_Description");
                OnReward_Category_DescriptionChanged();
            }
        }
        private global::System.String _Reward_Category_Description;
        partial void OnReward_Category_DescriptionChanging(global::System.String value);
        partial void OnReward_Category_DescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Rewards_Reward_Categories", "Rewards")]
        public EntityCollection<Rewards> Rewards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rewards>("PointsModel.FK_Rewards_Reward_Categories", "Rewards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rewards>("PointsModel.FK_Rewards_Reward_Categories", "Rewards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="Rewards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rewards : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rewards object.
        /// </summary>
        /// <param name="reward_ID">Initial value of the Reward_ID property.</param>
        public static Rewards CreateRewards(global::System.Int32 reward_ID)
        {
            Rewards rewards = new Rewards();
            rewards.Reward_ID = reward_ID;
            return rewards;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reward_ID
        {
            get
            {
                return _Reward_ID;
            }
            set
            {
                if (_Reward_ID != value)
                {
                    OnReward_IDChanging(value);
                    ReportPropertyChanging("Reward_ID");
                    _Reward_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Reward_ID");
                    OnReward_IDChanged();
                }
            }
        }
        private global::System.Int32 _Reward_ID;
        partial void OnReward_IDChanging(global::System.Int32 value);
        partial void OnReward_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reward_Name
        {
            get
            {
                return _Reward_Name;
            }
            set
            {
                OnReward_NameChanging(value);
                ReportPropertyChanging("Reward_Name");
                _Reward_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reward_Name");
                OnReward_NameChanged();
            }
        }
        private global::System.String _Reward_Name;
        partial void OnReward_NameChanging(global::System.String value);
        partial void OnReward_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reward_Category_ID
        {
            get
            {
                return _Reward_Category_ID;
            }
            set
            {
                OnReward_Category_IDChanging(value);
                ReportPropertyChanging("Reward_Category_ID");
                _Reward_Category_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reward_Category_ID");
                OnReward_Category_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Reward_Category_ID;
        partial void OnReward_Category_IDChanging(Nullable<global::System.Int32> value);
        partial void OnReward_Category_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reward_Description
        {
            get
            {
                return _Reward_Description;
            }
            set
            {
                OnReward_DescriptionChanging(value);
                ReportPropertyChanging("Reward_Description");
                _Reward_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reward_Description");
                OnReward_DescriptionChanged();
            }
        }
        private global::System.String _Reward_Description;
        partial void OnReward_DescriptionChanging(global::System.String value);
        partial void OnReward_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Int32> _Cost;
        partial void OnCostChanging(Nullable<global::System.Int32> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Claims_Rewards", "Claims")]
        public EntityCollection<Claims> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claims>("PointsModel.FK_Claims_Rewards", "Claims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claims>("PointsModel.FK_Claims_Rewards", "Claims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Rewards_Reward_Categories", "Reward_Categories")]
        public Reward_Categories Reward_Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reward_Categories>("PointsModel.FK_Rewards_Reward_Categories", "Reward_Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reward_Categories>("PointsModel.FK_Rewards_Reward_Categories", "Reward_Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reward_Categories> Reward_CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reward_Categories>("PointsModel.FK_Rewards_Reward_Categories", "Reward_Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reward_Categories>("PointsModel.FK_Rewards_Reward_Categories", "Reward_Categories", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PointsModel", Name="Transactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transactions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transactions object.
        /// </summary>
        /// <param name="transaction_ID">Initial value of the Transaction_ID property.</param>
        public static Transactions CreateTransactions(global::System.Int32 transaction_ID)
        {
            Transactions transactions = new Transactions();
            transactions.Transaction_ID = transaction_ID;
            return transactions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Transaction_ID
        {
            get
            {
                return _Transaction_ID;
            }
            set
            {
                if (_Transaction_ID != value)
                {
                    OnTransaction_IDChanging(value);
                    ReportPropertyChanging("Transaction_ID");
                    _Transaction_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Transaction_ID");
                    OnTransaction_IDChanged();
                }
            }
        }
        private global::System.Int32 _Transaction_ID;
        partial void OnTransaction_IDChanging(global::System.Int32 value);
        partial void OnTransaction_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customer_ID
        {
            get
            {
                return _Customer_ID;
            }
            set
            {
                OnCustomer_IDChanging(value);
                ReportPropertyChanging("Customer_ID");
                _Customer_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Customer_ID");
                OnCustomer_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Customer_ID;
        partial void OnCustomer_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomer_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Transaction_Date
        {
            get
            {
                return _Transaction_Date;
            }
            set
            {
                OnTransaction_DateChanging(value);
                ReportPropertyChanging("Transaction_Date");
                _Transaction_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Transaction_Date");
                OnTransaction_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Transaction_Date;
        partial void OnTransaction_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransaction_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RO_Number
        {
            get
            {
                return _RO_Number;
            }
            set
            {
                OnRO_NumberChanging(value);
                ReportPropertyChanging("RO_Number");
                _RO_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RO_Number");
                OnRO_NumberChanged();
            }
        }
        private global::System.String _RO_Number;
        partial void OnRO_NumberChanging(global::System.String value);
        partial void OnRO_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VIN
        {
            get
            {
                return _VIN;
            }
            set
            {
                OnVINChanging(value);
                ReportPropertyChanging("VIN");
                _VIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VIN");
                OnVINChanged();
            }
        }
        private global::System.String _VIN;
        partial void OnVINChanging(global::System.String value);
        partial void OnVINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _Points;
        partial void OnPointsChanging(Nullable<global::System.Int32> value);
        partial void OnPointsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PointsModel", "FK_Transactions_Customers", "Customers")]
        public Customers Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Transactions_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Transactions_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customers> CustomersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customers>("PointsModel.FK_Transactions_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customers>("PointsModel.FK_Transactions_Customers", "Customers", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
