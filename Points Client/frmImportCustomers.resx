<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>